openapi: 3.0.0
info:
  title: Gameplan Backend API
  version: 1.0.0
  description: OpenAPI specification for the Gameplan backend infrastructure.
servers:
  - url: https://gameplan-api-prod.jeremyallard.dev
    description: Production API server

  - url: https://gameplan-api-dev.jeremyallard.dev
    description: Dev API server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /matches/batches:
    put:
      summary: Update multiple matches at the same time
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "./openapi-schemas.yml#/schemas/DbMatch"
      responses:
        "200":
          description: Successful operation

  /matches:
    post:
      summary: Add a new match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/AddMatchParams"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object

  /matches/{matchId}:
    parameters:
      - in: path
        name: matchId
        schema:
          type: integer
        required: true
        description: The ID of the match to delete
    delete:
      summary: Delete a match
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
    put:
      summary: Save match data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SaveMatchDataParams"
      responses:
        "200":
          description: Successful operation

  /matches/unassignPlayerFromMatch:
    post:
      summary: Unassign a player from a match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/UnassignPlayerFromMatchParams"
      responses:
        "200":
          description: Successful operation

  /players:
    post:
      summary: Create a pool player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/CreatePoolPlayerParams"
      responses:
        "200":
          description: Successful operation
    get:
      summary: Get a list of players
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          description: The maximum number of players to return
        - in: query
          name: offset
          schema:
            type: integer
          required: true
          description: The offset to start from
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        player:
                          $ref: "./openapi-schemas.yml#/schemas/DbPlayer"
                        customValues:
                          type: object
                          additionalProperties:
                            type: string

  /players/{playerId}/schedule:
    get:
      summary: Get the schedule for a player
      parameters:
        - in: path
          name: playerId
          schema:
            type: integer
          required: true
          description: The ID of the player to retrieve the schedule for
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        match:
                          $ref: "./openapi-schemas.yml#/schemas/DbMatch"
                        season:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string

  /players/{playerId}/customColumns:
    parameters:
      - in: path
        name: playerId
        schema:
          type: integer
        required: true
        description: The ID of the player
    get:
      summary: Get player custom columns values for a player
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "./openapi-schemas.yml#/schemas/DbPlayerCustomValue"

    put:
      summary: Save a player custom value
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SavePlayerCustomValueParams"
      responses:
        "200":
          description: Successful operation

  /players/{playerId}:
    parameters:
      - in: path
        name: playerId
        schema:
          type: integer
        required: true
        description: The ID of the player
    put:
      summary: Save player data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SavePlayerDataParams"
      responses:
        "200":
          description: Successful operation
    delete:
      summary: Delete a player
      responses:
        "200":
          description: Successful operation
    get:
      summary: Get a player by ID
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      player:
                        $ref: "./openapi-schemas.yml#/schemas/DbPlayer"
                      customValues:
                        type: object
                        additionalProperties:
                          type: string

  /seasons:
    $ref: "./openapi-seasons.yml#/paths/~1seasons"
  /seasons/{seasonId}/publicScheduleLink:
    $ref: "./openapi-seasons.yml#/paths/~1seasons~1{seasonId}~1publicScheduleLink"
  /seasons/{seasonId}:
    $ref: "./openapi-seasons.yml#/paths/~1seasons~1{seasonId}"
  /seasons/{seasonId}/scoreboard:
    $ref: "./openapi-seasons.yml#/paths/~1seasons~1{seasonId}~1scoreboard"
  /seasons/totalAmount:
    $ref: "./openapi-seasons.yml#/paths/~1seasons~1totalAmount"
  /support/messages:
    post:
      summary: Send a support message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SendSupportMessageParams"
      responses:
        "200":
          description: Successful operation

  /users/{userId}/customPlayerColumns/{columnId}:
    delete:
      summary: Delete a player custom column
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user
        - in: path
          name: columnId
          schema:
            type: integer
          required: true
          description: The ID of the player custom column to delete
      responses:
        "200":
          description: Successful operation
  /users/{userId}/customPlayerColumns:
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: The ID of the user
    get:
      summary: Get all player custom columns
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "./openapi-schemas.yml#/schemas/DbPlayerCustomColumn"
    post:
      summary: Create a player custom column for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/CreatePlayerCustomColumnParams"
      responses:
        "200":
          description: Successful operation

  /users/sendVerificationEmail:
    post:
      summary: Send a verification email
      responses:
        "200":
          description: Successful operation

  /users/verifyMagicLinkToken:
    post:
      summary: Verify a magic link token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Successful operation

  /users/signUpUser:
    post:
      summary: Sign up a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SignUpUserParams"
      responses:
        "200":
          description: Successful operation

  /sessions:
    post:
      summary: Create a new session / log in an existing user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/LoginUserParams"
      responses:
        "200":
          description: Successful operation

  /users/sendResetPasswordLink:
    post:
      summary: Send a reset password link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SendResetPasswordLinkParams"
      responses:
        "200":
          description: Successful operation

  /users/{userId}/resetCurrentUserPassword:
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: The ID of the user
    post:
      summary: Reset the current user's password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/ResetCurrentUserPasswordParams"
      responses:
        "200":
          description: Successful operation

  /users/{userId}/usersettings:
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: The ID of the user
    post:
      summary: Save user settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SaveUserSettingsParams"
      responses:
        "200":
          description: Successful operation
    get:
      summary: Get user settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                      phone:
                        type: string
                        nullable: true
                      name:
                        type: string
                      isVerified:
                        type: boolean
                      lang:
                        type: string
                      birthday:
                        type: string
                        format: date
                      tier:
                        $ref: "./openapi-schemas.yml#/schemas/Tier"
                    required:
                      - email
                      - phone
                      - name
                      - isVerified
                      - lang
                      - birthday
                      - tier
        "400":
          description: Bad Request - Invalid ID format provided.
          content:
            application/json:
              schema:
                $ref: "./openapi-schemas.yml#/schemas/ErrorResponse"

  /users/{userId}:
    delete:
      summary: Delete the current user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the user to delete
      responses:
        "200":
          description: Successful operation

  /users/{userId}/upcomingSeasons:
    get:
      summary: Get upcoming seasons for the user
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: The ID of the season
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      seasons:
                        type: array
                        items:
                          $ref: "./openapi-schemas.yml#/schemas/DbSeason"

  /users/updateUserPassword:
    post:
      summary: Update user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/UpdateUserPasswordParams"
      responses:
        "200":
          description: Successful operation

  /users/{userId}/appsettings:
    parameters:
      - in: path
        name: userId
        schema:
          type: integer
        required: true
        description: The ID of the user
    post:
      summary: Save app settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./openapi-schemas.yml#/schemas/SaveAppSettingsParams"
      responses:
        "200":
          description: Successful operation
    get:
      summary: Get app settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object # Assuming AppSettings is a complex object

  /users/{userId}/subscription:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          description: The ID of the user
    get:
      summary: Get user subscription details
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      subscriptionTier:
                        type: string
                      cancellationAllowed:
                        type: boolean
                      features:
                        type: object

    delete:
      summary: Cancel user subscription
      responses:
        "200":
          description: Successful operation

  /subscriptions/initUpdatePaymentMethod:
    post:
      summary: Initialize update payment method
      responses:
        "200":
          description: Successful operation

  /subscriptions/handleSuccessUpgrade:
    post:
      summary: Handle successful upgrade
      responses:
        "200":
          description: Successful operation

  /subscriptions/upgradeUserSubscription:
    post:
      summary: Upgrade user subscription
      responses:
        "200":
          description: Successful operation
